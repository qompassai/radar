# /qompassai/radar/pyproject.toml
# -----------------------------------
# Copyright (C) 2025 Qompass AI, All rights reserved
[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "radar"
version = "1.0.0"
authors = [{ name = "Matt A. Porter", email = "map@qompass.ai" }]
maintainers = [{ name = "Matt A. Porter", email = "map@qompass.ai" }]
description = "Qompass AI Risk Analysis Diagnostic Assessment Resolver aka 'R.A.D.A.R': Your Nist-Endorsed AI 'Check-up' "
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
  "alembic>=1.13.0",
  "boto3>=1.16.0",
  "Click>=8.0.0,<9",
  "entrypoints>=0.3",
  "Flask>=2.0.0",
  "flask-accepts>=0.17.0",
  "Flask-Cors>=3.0.1",
  "Flask-Login>=0.6.0",
  "Flask-Migrate>=2.5.0",
  "flask-restx>=0.5.1",
  "Flask-SQLAlchemy>=2.4.0",
  "injector>=0.18.0",
  "jsonschema>=4.17.0",
  "marshmallow>=3.9.0,<4",
  "multimethod>=1.5",
  "numpy>=1.22.0",
  "pandas>=1.5.0",
  "passlib>=1.7.0",
  "pyparsing>=3.1.0",
  "python-dateutil>=2.8.0",
  "PyYAML>=6.0.0",
  "redis>=3.5.0",
  "requests>=2.25,<3",
  "rq>=1.5.0",
  "scipy>=1.4.1",
  "structlog>=20.2.0",
  "SQLAlchemy>=2",
  "typing-extensions>=3.7.4.3",
  "werkzeug>=3.0.0",
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: Flask",
  "Intended Audience :: Science/Research",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Security",
]

[project.urls]
repository = "https://github.com/qompassai/radar"
documentation = "https://pages.nist.gov/radar"
Changelog = "https://github.com/qompassai/radar/blob/main/CHANGELOG.md"
"Issue Tracker" = "https://github.com/qompassai/radar/issues"

[project.scripts]
radar-db = "radar.restapi.db.alembic.run:cli"
run-experiment = "radar.task_engine.run_experiment:main"
validate-experiment = "radar.task_engine.validate:main"
s3-download = "radar.worker.s3_download_cli:main"
radar-worker-v1 = "radar.worker.radar_worker_v1:main"

[project.entry-points."radar.generics.estimator_predict"]
tf_keras_model = "radar.generics_plugins.estimator_predict.tf_keras_model"

[project.entry-points."radar.generics.fit_estimator"]
tf_keras_model = "radar.generics_plugins.fit_estimator.tf_keras_model"

[project.optional-dependencies]
cookiecutter = ["cookiecutter>=2.0.0,<2.7.0"]
mlflow-skinny = ["mlflow-skinny>=2"]
mlflow-full = ["mlflow>=2"]
examples = [
  "aiohttp>=3.8.0",
  "kaggle>=1.5.0",
  "Pillow>=9.2.0",
  "rich>=13.3.0",
  "universal_pathlib>=0.0.23",
]
postgres = ["psycopg2-binary>=2.9.0"]
worker = [
  "async_timeout",
  "adversarial-robustness-toolbox>=1.9.0",
  "imgaug>=0.4.0",
  "matplotlib",
  "nrtk>=0.3.0",
  "opencv-python",
  "Pillow>=9.2.0",
  "prefect>=1.0.0,<2",
  "pyarrow",
  "pycocotools",
  "python-json-logger>=2.0.0",
  "rich>=13.3.0",
  "scikit-learn>=1.0.0",
  "simplejson",
  "tensorboard",
]
dev = [
  "autopep8",
  "binaryornot>=0.4.0",
  "build",
  "entrypoints",
  "esbonio",
  "Faker>=24.0.0",
  "flake8-bugbear",
  "flake8>=3.8.0",
  "freezegun",
  "ipykernel",
  "ipython",
  "jupyter",
  "jupyterlab",
  "nbconvert",
  "pip-tools",
  "pycodestyle",
  "pydocstyle",
  "pytest-cookies",
  "pytest>=7",
  "pytoml",
  "Sphinx>=4.5.0,<5",
  "tomli",
  "tox>=4.4.0",
  "wheel",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.bumpver]
current_version = "1.0.0"
version_pattern = "MAJOR.MINOR.PATCH[-TAG]"
commit_message = "release {old_version} â†’ {new_version}"
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"README.md" = ["Release {version}"]
"pyproject.toml" = [
  'current_version = "{version}"',
  'version = "{pep440_version}"',
]
"docs/source/conf.py" = ['release = "{version}"']
"src/radar/client/__version__.py" = ["{pep440_version}"]
"src/radar/pyplugs/__version__.py" = ["{pep440_version}"]
"src/radar/restapi/__version__.py" = ["{pep440_version}"]
"src/radar/rq/__version__.py" = ["{pep440_version}"]
"src/radar/sdk/__version__.py" = ["{pep440_version}"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "1.0.0"
changelog_file = "CHANGELOG.md"
style = [
  [
    "qmark",
    "fg:#ff9d00 bold",
  ],
  [
    "question",
    "bold",
  ],
  [
    "answer",
    "fg:#ff9d00 bold",
  ],
  [
    "pointer",
    "fg:#ff9d00 bold",
  ],
  [
    "highlighted",
    "fg:#ff9d00 bold",
  ],
  [
    "selected",
    "fg:#cc5454",
  ],
  [
    "separator",
    "fg:#cc5454",
  ],
  [
    "instruction",
    "",
  ],
  [
    "text",
    "",
  ],
  [
    "disabled",
    "fg:#858585 italic",
  ],
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if TYPE_CHECKING:",
  '\.\.\.',
  "if __name__ == .__main__.:",
]

[tool.coverage.run]
omit = [
  "*/__init__.py",
  "*/__version__.py",
  "restapi/config.py",
  "restapi/models.py",
  "*/alembic/*.py",
  "*/alembic/versions/*.py",
]

[tool.doc8]
ignore = ["D001"]

[tool.isort]
profile = "black"
honor_noqa = true

[tool.mypy]
python_version = "3.11"
platform = "linux"
mypy_path = "src,task-plugins"
explicit_package_bases = true
namespace_packages = true
show_column_numbers = true
follow_imports = "normal"
ignore_missing_imports = true
disallow_untyped_calls = true
warn_return_any = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
cache_dir = "/dev/null"
exclude = ['alembic/.*$']
plugins = "numpy.typing.mypy_plugin"

[tool.pyright]
include = ["src"]
exclude = ["**/.ipynb_checkpoints", "**/__pycache__", "**/.tox"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--import-mode=importlib -ra"
testpaths = ["tests/unit"]
log_cli = false
log_cli_level = "INFO"
markers = ["info: marks tests as info (deselect with '-m \"not info\"')"]
norecursedirs = [
  "*.egg",
  ".*",
  "_darcs",
  "build",
  "CVS",
  "dist",
  "node_modules",
  "venv",
  '{arch}',
  "alembic",
]

[tool.rstcheck]
ignore_directives = [
  "autoclass",
  "autodecorator",
  "autofunction",
  "automodule",
  "autoexception",
  "dropdown",
  "panels",
  "margin",
  "tab-set",
  "tabbed",
]
ignore_messages = '(Hyperlink target ".*?" is not referenced\.)'
ignore_roles = ["kbd"]
report_level = "INFO"
